{"ast":null,"code":"export default function paginationField() {\n  return {\n    keyArgs: false\n    /* tells apollo that we will take care of everything */\n    ,\n    read: function read() {\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      /* first thing it does is asks the read function for those items */\n      console.log({\n        existing: existing,\n        args: args,\n        cache: cache\n      });\n      /* We can either do one of two things */\n\n      /* First thing we can do is return the items because they are already in cache */\n\n      /* The other thing we can do is return false from here */\n    },\n    merge: function merge() {\n      /* This runs when apollo client comes back from network with our products */\n    }\n  };\n}","map":{"version":3,"sources":["/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/lib/paginationField.js"],"names":["paginationField","keyArgs","read","existing","args","cache","console","log","merge"],"mappings":"AAAA,eAAe,SAASA,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE;AAAM;AADV;AAELC,IAAAA,IAFK,kBAEgC;AAAA,UAAhCC,QAAgC,uEAArB,EAAqB;;AAAA;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;;AACnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,IAAI,EAAJA,IAAZ;AAAkBC,QAAAA,KAAK,EAALA;AAAlB,OAAZ;AACA;;AAEA;;AAEA;AACD,KAVI;AAWLG,IAAAA,KAXK,mBAWG;AACN;AACD;AAbI,GAAP;AAeD","sourcesContent":["export default function paginationField() {\n  return {\n    keyArgs: false /* tells apollo that we will take care of everything */,\n    read(existing = [], { args, cache }) {\n      /* first thing it does is asks the read function for those items */\n      console.log({ existing, args, cache });\n      /* We can either do one of two things */\n\n      /* First thing we can do is return the items because they are already in cache */\n\n      /* The other thing we can do is return false from here */\n    },\n    merge() {\n      /* This runs when apollo client comes back from network with our products */\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}