{"ast":null,"code":"import _defineProperty from \"/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { et } from 'date-fns/locale';\nimport { useState } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  /* create a state object for our inputs */\n  var _useState = useState(),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  function handleChange(e) {\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }\n  /* return things we want to surface from this custom hook */\n\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange\n  };\n}\n\n_s(useForm, \"5irz/yJqqYxOlVBXHDs2JoavT1Y=\");","map":{"version":3,"sources":["/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/lib/useForm.js"],"names":["et","useState","useForm","initial","inputs","setInputs","handleChange","e","target","name","value"],"mappings":";;;;;;;;AAAA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC5C;AAD4C,kBAEhBF,QAAQ,EAFQ;AAAA,MAErCG,MAFqC;AAAA,MAE7BC,SAF6B;;AAI5C,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBF,IAAAA,SAAS,iCAEJD,MAFI,2BAGNG,CAAC,CAACC,MAAF,CAASC,IAHH,EAGUF,CAAC,CAACC,MAAF,CAASE,KAHnB,GAAT;AAKD;AACD;;;AACA,SAAO;AACLN,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID;;GAhBuBJ,O","sourcesContent":["import { et } from 'date-fns/locale';\nimport { useState } from 'react';\n\nexport default function useForm(initial = {}) {\n  /* create a state object for our inputs */\n  const [inputs, setInputs] = useState();\n\n  function handleChange(e) {\n    setInputs({\n      /* copy existing state */\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  }\n  /* return things we want to surface from this custom hook */\n  return {\n    inputs,\n    handleChange,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}