{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/components/SingleProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from './ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var _Product$photo, _Product$photo$image, _Product$photo2;\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  var Product = data.Product;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [Product.name, \" | Sick Fits\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Product === null || Product === void 0 ? void 0 : (_Product$photo = Product.photo) === null || _Product$photo === void 0 ? void 0 : (_Product$photo$image = _Product$photo.image) === null || _Product$photo$image === void 0 ? void 0 : _Product$photo$image.publicUrlTransformed,\n      alt: Product === null || Product === void 0 ? void 0 : (_Product$photo2 = Product.photo) === null || _Product$photo2 === void 0 ? void 0 : _Product$photo2.altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/components/SingleProduct.js"],"names":["useQuery","gql","Head","ErrorMessage","SINGLE_ITEM_QUERY","SingleProduct","id","variables","data","loading","error","Product","name","photo","image","publicUrlTransformed","altText","description"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAiBA,eAAe,SAASI,aAAT,OAA+B;AAAA;;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACXN,QAAQ,CAACI,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADgD,GAApB,CADG;AAAA,MACpCE,IADoC,aACpCA,IADoC;AAAA,MAC9BC,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;;AAO5C,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AARiC,MASpCC,OAToC,GASxBH,IATwB,CASpCG,OAToC;AAU5C,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQA,OAAO,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,GAAG,EAAED,OAAF,aAAEA,OAAF,yCAAEA,OAAO,CAAEE,KAAX,2EAAE,eAAgBC,KAAlB,yDAAE,qBAAuBC,oBAD9B;AAEE,MAAA,GAAG,EAAEJ,OAAF,aAAEA,OAAF,0CAAEA,OAAO,CAAEE,KAAX,oDAAE,gBAAgBG;AAFvB;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKL,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzBuBZ,a;UACWL,Q;;;KADXK,a","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport ErrorMessage from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      price\n      description\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleProduct({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const { Product } = data;\n  return (\n    <div>\n      <Head>\n        <title>{Product.name} | Sick Fits</title>\n      </Head>\n      <img\n        src={Product?.photo?.image?.publicUrlTransformed}\n        alt={Product?.photo?.altText}\n      />\n      <div className=\"details\">\n        <h2>{Product.name}</h2>\n        <p>{Product.description}</p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}