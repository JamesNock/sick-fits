{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first, skip: $skip) {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductsList = styled.div.withConfig({\n  displayName: \"Products__ProductsList\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;gap:60px;\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsList, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/James/Sites/tutorials/advanced-react/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsList","div","Products","page","data","error","loading","variables","skip","first","console","log","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,YAAY,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,4DAAlB;AAMA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BZ,QAAQ,CAACK,kBAAD,EAAqB;AAC5DQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEL,IAAI,GAAGN,OAAP,GAAiBA,OAAzB;AAAkCY,MAAAA,KAAK,EAAEZ;AAAzC;AADiD,GAArB,CAAzC;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,gBACGR,IAAI,CAACS,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBACpB,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first, skip: $skip) {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 60px;\n`;\n\nexport default function Products({ page }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage },\n  });\n  console.log(data, error, loading);\n  if (loading) return <p>Loading</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsList>\n        {data.allProducts.map((product) => (\n          <Product key={product.id} product={product} />\n        ))}\n      </ProductsList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}